{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
      "_generator": {
        "name": "bicep",
        "version": "0.9.1.41621",
        "templateHash": "2803229554544767325"
      }
    },
    "variables": {
      "fileuploadurivariable": "[parameters('fileuploaduri')]",
      "scriptParametersToUploadFile": "[format('-ResourceGroupName {0} -RawDataLakeAccountName {1}', resourceGroup().name,format('pvlab{0}adls', variables('randomString')))]",
      "contributorRoleDefinitionId": "B24988ac-6180-42a0-ab88-20f7382dd24c",
      "bootstrapRoleAssignmentId": "[guid(parameters('firstuniquestring'), parameters('seconduniquestring'))]",
      "location": "[resourceGroup().location]",
      "randomString": "[substring(guid(resourceGroup().id), 0, 6)]",
      "roleDefinitionprefix": "[format('/subscriptions/{0}/providers/Microsoft.Authorization/roleDefinitions', subscription().subscriptionId)]",
      "role": {
        "Owner": "[format('{0}/8e3af657-a8ff-443c-a75c-2fe8c4bcb635', variables('roleDefinitionprefix'))]",
        "Contributor": "[format('{0}/b24988ac-6180-42a0-ab88-20f7382dd24c', variables('roleDefinitionprefix'))]",
        "Reader": "[format('{0}/acdd72a7-3385-48ef-bd42-f606fba81ae7', variables('roleDefinitionprefix'))]",
        "UserAccessAdministrator": "[format('{0}/18d7d88d-d35e-4fb5-a5c3-7773c20a72d9', variables('roleDefinitionprefix'))]",
        "StorageBlobDataOwner": "[format('{0}/b7e6dc6d-f1e8-4753-8033-0f276bb0955b', variables('roleDefinitionprefix'))]",
        "StorageBlobDataContributor": "[format('{0}/ba92f5b4-2d11-453d-a403-e96b0029c9fe', variables('roleDefinitionprefix'))]",
        "StorageBlobDataReader": "[format('{0}/2a2b9908-6ea1-4ae2-8e65-a410df84e7d1', variables('roleDefinitionprefix'))]"
      }
    },
    "parameters": {
       "purviewName": {
          "type": "string",
          "defaultValue": "[format('pvlab-{0}-purview', substring(guid(resourceGroup().id), 0, 6))]",
          "metadata": {
            "description": "Specify a name for the Azure Purview account."
          }
        },
        "fileuploaduri": {
            "defaultValue": "https://raw.githubusercontent.com/CSALabsAutomation/azure-purview-labs/main/environments/env1/scripts/uploadfile.ps1",
            "type": "String",
            "metadata": {
                "description": "The URI of script file to upload blob container"
            }
        },
        "identityName": {
            "defaultValue": "PostDeploymentScriptuserAssignedName",
            "type": "String",
            "metadata": {
                "description": "Name of identity"
            }
        },
        "uniqueSuffix": {
            "defaultValue": "[substring(uniqueString(resourceGroup().id), 0, 6)]",
            "type": "String",
            "metadata": {
                "description": "Unique Suffix"
            }
        },
        "firstuniquestring": {
            "defaultValue": "[format('firstunique{0}', parameters('uniqueSuffix'))]",
            "type": "String",
            "metadata": {
                "description": "firstuniquestring"
            }
        },
        "seconduniquestring": {
            "defaultValue": "[format('secondunique{0}', parameters('uniqueSuffix'))]",
            "type": "String",
            "metadata": {
                "description": "seconduniquestring"
            }
        },
        "utcValue": {
          "type": "string",
          "defaultValue": "[utcNow()]"
        },
        "containerName": {
          "type": "string",
          "defaultValue": "raw"
        }
      },

    "resources": [
      {
        "type": "Microsoft.Sql/servers/firewallRules",
        "apiVersion": "2021-02-01-preview",
        "name": "[format('{0}/{1}', format('pvlab-{0}-sqlsvr', variables('randomString')), 'allowAzure')]",
        "properties": {
          "startIpAddress": "0.0.0.0",
          "endIpAddress": "0.0.0.0"
        },
        "dependsOn": [
          "[resourceId('Microsoft.Sql/servers', format('pvlab-{0}-sqlsvr', variables('randomString')))]"
        ]
      },
      {
        "type": "Microsoft.Sql/servers/firewallRules",
        "apiVersion": "2021-02-01-preview",
        "name": "[format('{0}/{1}', format('pvlab-{0}-sqlsvr', variables('randomString')), 'allowAll')]",
        "properties": {
          "startIpAddress": "0.0.0.0",
          "endIpAddress": "255.255.255.255"
        },
        "dependsOn": [
          "[resourceId('Microsoft.Sql/servers', format('pvlab-{0}-sqlsvr', variables('randomString')))]"
        ]
      },
      {
        "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
        "apiVersion": "2021-04-01",
        "name": "[format('{0}/{1}/{2}', format('pvlab{0}synapse', variables('randomString')), 'default', format('synapsefs{0}', variables('randomString')))]",
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts/blobServices', format('pvlab{0}synapse', variables('randomString')), 'default')]"
        ]
      },
      {
        "type": "Microsoft.Storage/storageAccounts/blobServices",
        "apiVersion": "2021-04-01",
        "name": "[format('{0}/{1}', format('pvlab{0}synapse', variables('randomString')), 'default')]",
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts', format('pvlab{0}synapse', variables('randomString')))]"
        ]
      },
      {
        "type": "Microsoft.Synapse/workspaces/firewallRules",
        "apiVersion": "2021-05-01",
        "name": "[format('{0}/{1}', format('pvlab-{0}-synapse', variables('randomString')), 'allowAll')]",
        "properties": {
          "startIpAddress": "0.0.0.0",
          "endIpAddress": "255.255.255.255"
        },
        "dependsOn": [
          "[resourceId('Microsoft.Synapse/workspaces', format('pvlab-{0}-synapse', variables('randomString')))]"
        ]
      },
      {
        "type": "Microsoft.Purview/accounts",
        "apiVersion": "2021-12-01",
        "name": "[parameters('purviewName')]",
        "location": "[variables('location')]",
        "sku": {
            "name": "Standard",
            "capacity": 1
        },
        "identity": {
            "type": "SystemAssigned"
        },
        "properties": {
            "publicNetworkAccess": "Enabled",
            "managedResourceGroupName": "[format('managed-rg-{0}', parameters('purviewName'))]"
        }
      },

      {
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2021-04-01",
        "name": "[format('pvlab{0}adls', variables('randomString'))]",
        "location": "[variables('location')]",
        "kind": "StorageV2",
        "sku": {
          "name": "Standard_LRS"
        },
        "properties": {
          "isHnsEnabled": true,
          "minimumTlsVersion": "TLS1_2",
          "allowBlobPublicAccess": false,
          "supportsHttpsTrafficOnly": true
        }
      },
      {
        "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
        "apiVersion": "2021-06-01",
        "name": "[format('{0}/default/{1}',format('pvlab{0}adls', variables('randomString')), parameters('containerName'))]",
        "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', format('pvlab{0}adls', variables('randomString')))]"
          ]
      },
      {
        "type": "Microsoft.Sql/servers",
        "apiVersion": "2021-02-01-preview",
        "name": "[format('pvlab-{0}-sqlsvr', variables('randomString'))]",
        "location": "[variables('location')]",
        "properties": {
          "administratorLogin": "sqladmin",
          "administratorLoginPassword": "sqlPassword!"
        }
      },
      {
        "type": "Microsoft.Sql/servers/databases",
        "apiVersion": "2021-02-01-preview",
        "name": "[format('{0}/{1}', format('pvlab-{0}-sqlsvr', variables('randomString')), format('pvlab-{0}-sqldb', variables('randomString')))]",
        "location": "[variables('location')]",
        "sku": {
          "name": "GP_S_Gen5",
          "tier": "GeneralPurpose",
          "family": "Gen5",
          "capacity": 1
        },
        "properties": {
          "collation": "SQL_Latin1_General_CP1_CI_AS",
          "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
          "autoPauseDelay": 60,
          "requestedBackupStorageRedundancy": "Local",
          "sampleName": "AdventureWorksLT"
        },
        "dependsOn": [
          "[resourceId('Microsoft.Sql/servers', format('pvlab-{0}-sqlsvr', variables('randomString')))]"
        ]
      },
      {
        "type": "Microsoft.KeyVault/vaults",
        "apiVersion": "2021-04-01-preview",
        "name": "[format('vault{0}', parameters('utcValue'))]",
        "location": "[variables('location')]",
        "properties": {
          "sku": {
            "family": "A",
            "name": "standard"
          },
          "tenantId": "[subscription().tenantId]",
          "accessPolicies": []
        }
      },
      {
        "type": "Microsoft.DataFactory/factories",
        "apiVersion": "2018-06-01",
        "name": "[format('pvlab-{0}-adf', variables('randomString'))]",
        "location": "[variables('location')]",
        "properties": {
          "publicNetworkAccess": "Enabled"
        },
        "identity": {
          "type": "SystemAssigned"
        }
      },
      {
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2021-04-01",
        "name": "[format('pvlab{0}synapse', variables('randomString'))]",
        "location": "[variables('location')]",
        "kind": "StorageV2",
        "sku": {
          "name": "Standard_LRS"
        },
        "properties": {
          "isHnsEnabled": true,
          "networkAcls": {
            "bypass": "AzureServices",
            "virtualNetworkRules": [],
            "ipRules": [],
            "defaultAction": "Allow"
          },
          "minimumTlsVersion": "TLS1_2",
          "allowBlobPublicAccess": false,
          "supportsHttpsTrafficOnly": true,
          "accessTier": "Hot"
        }
      },
      {
        "type": "Microsoft.Synapse/workspaces",
        "apiVersion": "2021-05-01",
        "name": "[format('pvlab-{0}-synapse', variables('randomString'))]",
        "location": "[variables('location')]",
        "properties": {
          "defaultDataLakeStorage": {
            "accountUrl": "[reference(format('pvlab{0}synapse', variables('randomString'))).primaryEndpoints.dfs]",
            "filesystem": "[format('synapsefs{0}', variables('randomString'))]"
          }
        },
        "identity": {
          "type": "SystemAssigned"
        },
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts', format('pvlab{0}synapse', variables('randomString')))]"
        ]
      },
      {
        "type": "Microsoft.Authorization/roleAssignments",
        "apiVersion": "2020-08-01-preview",
        "scope": "[format('Microsoft.Storage/storageAccounts/{0}', format('pvlab{0}synapse', variables('randomString')))]",
        "name": "[guid(resourceGroup().id)]",
        "properties": {
          "principalId": "[reference(format('pvlab-{0}-synapse', variables('randomString')), '2021-05-01', 'full').identity.principalId]",
          "roleDefinitionId": "[variables('role').StorageBlobDataContributor]",
          "principalType": "ServicePrincipal"
        },
        "dependsOn": [
          "[resourceId('Microsoft.Synapse/workspaces', format('pvlab-{0}-synapse', variables('randomString')))]",
          "[resourceId('Microsoft.Storage/storageAccounts', format('pvlab{0}synapse', variables('randomString')))]"
        ]
      },
      {
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-10-01",
        "name": "SQLVMDeployment",
        "properties": {
          "expressionEvaluationOptions": {
            "scope": "inner"
          },
          "mode": "Incremental",
          "parameters": {
            "location": {
              "value": "[variables('location')]"
            },
            "randomString": {
              "value": "[variables('randomString')]"
            }
          },
          "template": {
            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "metadata": {
              "_generator": {
                "name": "bicep",
                "version": "0.9.1.41621",
                "templateHash": "13500320971029977407"
              }
            },
            "parameters": {
              "location": {
                "type": "string"
              },
         "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located including a trailing '/'"
            },
            "defaultValue": "[deployment().properties.templateLink.uri]"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
            },
            "defaultValue": ""
        },
         "sourceWindowsAdminUserName": {
            "defaultValue": "sqladmin",
            "type": "string",
            "metadata": {
                "description": "Windows Authentication user name for the source server"
            }
        },
          "sourceWindowsAdminPassword": {
            "defaultValue": "Password@123",
            "type": "securestring",
            "metadata": {
                "description": "Windows Authentication password for the source server"
            }
        },
              "randomString": {
                "type": "string"
              }
            },
            "variables": {
              "subnetName": "[format('pvlab-{0}-subnet', parameters('randomString'))]",
              "virtualNetworkName": "[format('pvlab-{0}-vnet', parameters('randomString'))]",
              "networkSecurityGroupName": "[format('pvlab-{0}-nsg', parameters('randomString'))]",
              "publicIpAddressName": "[format('pvlab-{0}-pub-ip', parameters('randomString'))]",
              "virtualMachineComputerName": "[format('pvlab{0}com', parameters('randomString'))]",
              "sqlVirtualMachineName": "[format('pvlab-{0}-sqlvm', parameters('randomString'))]",
              "adminUsername": "[format('sqladmin{0}', parameters('randomString'))]",
              "upperString": "[toUpper(parameters('randomString'))]",
              "adminPassword": "[format('{0}!{1}@{2}0aA', parameters('randomString'), variables('upperString'), parameters('randomString'))]",
               "scriptLocation": "AddDatabaseToSqlServer.ps1",
              "bakFileLocation": "AdventureWorksLT2019.bak",
              "scriptFiles": [
                "[uri(parameters('_artifactsLocation'), concat(variables('scriptLocation'), parameters('_artifactsLocationSasToken')))]",
                "[uri(parameters('_artifactsLocation'), concat(variables('bakFileLocation'), parameters('_artifactsLocationSasToken')))]"
                             ],
              "scriptParameters": "[concat('-userName ', parameters('sourceWindowsAdminUserName'), ' -password \"', parameters('sourceWindowsAdminPassword'))]"
            },
            "resources": [
              {
                "type": "Microsoft.Network/virtualNetworks/subnets",
                "apiVersion": "2020-11-01",
                "name": "[format('{0}/{1}', variables('virtualNetworkName'), variables('subnetName'))]",
                "properties": {
                  "addressPrefix": "10.2.0.0/24"
                },
                "dependsOn": [
                  "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
                ]
              },
              {
                "type": "Microsoft.Network/networkInterfaces",
                "apiVersion": "2018-10-01",
                "name": "[format('pvlab-{0}-ni', parameters('randomString'))]",
                "location": "[parameters('location')]",
                "properties": {
                  "ipConfigurations": [
                    {
                      "name": "[variables('subnetName')]",
                      "properties": {
                        "subnet": {
                          "id": "[format('{0}/subnets/{1}', resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName')), variables('subnetName'))]"
                        },
                        "privateIPAllocationMethod": "Dynamic",
                        "publicIPAddress": {
                          "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpAddressName'))]"
                        }
                      }
                    }
                  ],
                  "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                  }
                },
                "dependsOn": [
                  "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
                  "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpAddressName'))]",
                  "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
                ]
              },
              {
                "type": "Microsoft.Network/networkSecurityGroups",
                "apiVersion": "2019-02-01",
                "name": "[variables('networkSecurityGroupName')]",
                "location": "[parameters('location')]",
                "properties": {
                  "securityRules": [
                    {
                      "name": "RDP",
                      "properties": {
                        "priority": 300,
                        "protocol": "Tcp",
                        "access": "Allow",
                        "direction": "Inbound",
                        "sourceAddressPrefix": "*",
                        "sourcePortRange": "*",
                        "destinationAddressPrefix": "*",
                        "destinationPortRange": "3389"
                      }
                    }
                  ]
                }
              },
              {
                "type": "Microsoft.Network/virtualNetworks",
                "apiVersion": "2020-11-01",
                "name": "[variables('virtualNetworkName')]",
                "location": "[parameters('location')]",
                "properties": {
                  "addressSpace": {
                    "addressPrefixes": [
                      "10.2.0.0/16"
                    ]
                  }
                }
              },
              {
                "type": "Microsoft.Network/publicIPAddresses",
                "apiVersion": "2019-02-01",
                "name": "[variables('publicIpAddressName')]",
                "location": "[parameters('location')]",
                "properties": {
                  "publicIPAllocationMethod": "Dynamic"
                },
                "sku": {
                  "name": "Basic"
                }
              },
              {
                "type": "Microsoft.Compute/disks",
                "apiVersion": "2020-12-01",
                "name": "[format('pvlab-{0}_DataDisk', parameters('randomString'))]",
                "location": "[parameters('location')]",
                "sku": {
                  "name": "Premium_LRS"
                },
                "properties": {
                  "diskSizeGB": 8,
                  "creationData": {
                    "createOption": "Empty"
                  }
                }
              },
              {
                "type": "Microsoft.Compute/virtualMachines",
                "apiVersion": "2021-03-01",
                "name": "[variables('sqlVirtualMachineName')]",
                "location": "[parameters('location')]",
                "properties": {
                  "hardwareProfile": {
                    "vmSize": "Standard_B2ms"
                  },
                  "storageProfile": {
                    "osDisk": {
                      "createOption": "FromImage",
                      "managedDisk": {
                        "storageAccountType": "StandardSSD_LRS"
                      }
                    },
                    "imageReference": {
                      "publisher": "microsoftsqlserver",
                      "offer": "sql2019-ws2019",
                      "sku": "sqldev",
                      "version": "latest"
                    },
                    "dataDisks": [
                      {
                        "lun": 0,
                        "createOption": "Attach",
                        "caching": "ReadOnly",
                        "diskSizeGB": 8,
                        "managedDisk": {
                          "id": "[resourceId('Microsoft.Compute/disks', format('pvlab-{0}_DataDisk', parameters('randomString')))]",
                          "storageAccountType": "StandardSSD_LRS"
                        },
                        "writeAcceleratorEnabled": false
                      }
                    ]
                  },
                  "networkProfile": {
                    "networkInterfaces": [
                      {
                        "id": "[resourceId('Microsoft.Network/networkInterfaces', format('pvlab-{0}-ni', parameters('randomString')))]"
                      }
                    ]
                  },
                  "osProfile": {
                    "computerName": "[variables('virtualMachineComputerName')]",
                    "adminUsername": "[parameters('sourceWindowsAdminUserName')]",
                    "adminPassword": "[parameters('sourceWindowsAdminPassword')]",
                    "windowsConfiguration": {
                      "enableAutomaticUpdates": true,
                      "provisionVMAgent": true,
                      "patchSettings": {
                        "enableHotpatching": false,
                        "patchMode": "AutomaticByOS"
                      }
                    }
                  }
                },
                "dependsOn": [
                  "[resourceId('Microsoft.Compute/disks', format('pvlab-{0}_DataDisk', parameters('randomString')))]",
                  "[resourceId('Microsoft.Network/networkInterfaces', format('pvlab-{0}-ni', parameters('randomString')))]"
                ],
            "resources": [
                {
                    "apiVersion": "2019-12-01",
                    "type": "extensions",
                    "name": "CustomScriptExtension",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines/', variables('sqlVirtualMachineName'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Compute",
                        "type": "CustomScriptExtension",
                        "typeHandlerVersion": "1.9",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": "[variables('scriptFiles')]"
                        },
                        "protectedSettings": {
                            "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', './', variables('scriptLocation'), ' ', variables('scriptParameters'))]"
                        }
                    }
                }
            ]
              },
              {
                "type": "Microsoft.SqlVirtualMachine/sqlVirtualMachines",
                "apiVersion": "2017-03-01-preview",
                "name": "[variables('sqlVirtualMachineName')]",
                "location": "[parameters('location')]",
                "properties": {
                  "virtualMachineResourceId": "[resourceId('Microsoft.Compute/virtualMachines', variables('sqlVirtualMachineName'))]",
                  "sqlManagement": "Full",
                  "sqlServerLicenseType": "PAYG",
                  "autoPatchingSettings": {
                    "enable": true,
                    "dayOfWeek": "Sunday",
                    "maintenanceWindowStartingHour": 2,
                    "maintenanceWindowDuration": 60
                  },
                  "keyVaultCredentialSettings": {
                    "enable": false,
                    "credentialName": ""
                  },
                  "storageConfigurationSettings": {
                    "diskConfigurationType": "NEW",
                    "storageWorkloadType": "GENERAL",
                    "sqlDataSettings": {
                      "luns": [
                        0
                      ],
                      "defaultFilePath": "F:\\data"
                    },
                    "sqlLogSettings": {
                      "luns": [
                        0
                      ],
                      "defaultFilePath": "F:\\log"
                    },
                    "sqlTempDbSettings": {
                      "defaultFilePath": "F:\\tempDb",
                      "luns": [
                        0
                      ]
                    }
                  },
                  "serverConfigurationsManagementSettings": {
                    "sqlConnectivityUpdateSettings": {
                      "connectivityType": "PRIVATE",
                      "port": 1433,
                      "sqlAuthUpdateUserName": "",
                      "sqlAuthUpdatePassword": ""
                    },
                    "additionalFeaturesServerConfigurations": {
                      "isRServicesEnabled": false
                    }
                  }
                },
                "dependsOn": [
                  "[resourceId('Microsoft.Compute/virtualMachines', variables('sqlVirtualMachineName'))]"
                ]
              }
            ],
            "outputs": {
              "SQLVMadminUsername": {
                "type": "string",
                "value": "[variables('adminUsername')]"
              },
              "SQLVMadminPassword": {
                "type": "string",
                "value": "[variables('adminPassword')]"
              }
            }
          }
        }
      },
      {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "name": "PostDeploymentScriptForFileUpload",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))]"
            ],
            "kind": "AzurePowerShell",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))]": {}
                }
            },
            "properties": {
                "azPowerShellVersion": "7.2.4",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D",
                "timeout": "PT30M",
                "arguments": "[variables('scriptParametersToUploadFile')]",
                "primaryScriptUri": "[variables('fileuploadurivariable')]"
            }
        },
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2018-11-30",
            "name": "[parameters('identityName')]",
            "location": "[resourceGroup().location]"
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[variables('bootstrapRoleAssignmentId')]",
            "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('contributorRoleDefinitionId'))]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2018-11-30').principalId]",
                "scope": "[resourceGroup().id]",
                "principalType": "ServicePrincipal"
            }
        }
    ]
  }
